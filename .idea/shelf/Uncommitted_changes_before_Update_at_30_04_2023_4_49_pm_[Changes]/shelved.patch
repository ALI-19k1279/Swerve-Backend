Index: course-service/src/main/java/com/swerve/backend/subject/dto/CourseMaterialDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.swerve.backend.subject.dto;\r\n\r\nimport com.swerve.backend.shared.dto.BaseDTO;\r\nimport jakarta.validation.constraints.NotBlank;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Getter;\r\nimport lombok.NoArgsConstructor;\r\nimport lombok.Setter;\r\n\r\nimport java.time.LocalDateTime;\r\n\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\n@Getter\r\n@Setter\r\npublic class CourseMaterialDTO extends BaseDTO<Long> {\r\n    @NotBlank(message = \"Name is mandatory\")\r\n    private String name;\r\n    @NotBlank(message = \"Description is mandatory\")\r\n    private String description;\r\n    @NotBlank(message = \"Resource URL is mandatory\")\r\n    private String resourceUrl;\r\n    @NotBlank(message = \"Publication Date is mandatory\")\r\n    private LocalDateTime publicationDate;\r\n    @NotBlank(message = \"Teacher is mandatory\")\r\n    private InstructorDTO teacher;\r\n    @NotBlank(message = \"Offered Course is mandatory\")\r\n    private OfferedCourseDTO offeredCourse;\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/course-service/src/main/java/com/swerve/backend/subject/dto/CourseMaterialDTO.java b/course-service/src/main/java/com/swerve/backend/subject/dto/CourseMaterialDTO.java
--- a/course-service/src/main/java/com/swerve/backend/subject/dto/CourseMaterialDTO.java	(revision 86b1a1fb62b0b7f25b29e46f67ab7938d9727142)
+++ b/course-service/src/main/java/com/swerve/backend/subject/dto/CourseMaterialDTO.java	(date 1682744392520)
@@ -26,5 +26,4 @@
     private InstructorDTO teacher;
     @NotBlank(message = "Offered Course is mandatory")
     private OfferedCourseDTO offeredCourse;
-
 }
Index: course-service/src/main/java/com/swerve/backend/subject/repository/CourseMaterialRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.swerve.backend.subject.repository;\r\n\r\nimport com.swerve.backend.shared.repository.BaseRepository;\r\nimport com.swerve.backend.subject.model.Course;\r\nimport com.swerve.backend.subject.model.CourseMaterial;\r\nimport org.springframework.data.domain.Page;\r\nimport org.springframework.data.domain.Pageable;\r\nimport org.springframework.data.jpa.repository.Query;\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport java.util.List;\r\n\r\n@Repository\r\npublic interface CourseMaterialRepository extends BaseRepository<CourseMaterial,Long> {\r\n\r\n    @Override\r\n    @Query(\r\n            \"select x from #{#entityName} x where x.deleted = false \"\r\n                    + \"and (cast(x.id as string) like :search \"\r\n                    + \"or x.name like :search or x.description like :search or cast(x.publicationDate as string) like :search)\")\r\n    Page<CourseMaterial> findContaining(Pageable pageable, String search);\r\n\r\n    @Query(\r\n            \"select x from #{#entityName} x where x.deleted = false and x.offeredCourse.id = :courseId \"\r\n                    + \"and (cast(x.id as string) like :search \"\r\n                    + \"or x.name like :search or x.description like :search or cast(x.publicationDate as string) like :search)\")\r\n    Page<CourseMaterial> findByCourseIdContaining(\r\n            Long courseId, Pageable pageable, String search);\r\n\r\n    List<CourseMaterial> findByOfferedCourseAndDeletedFalseOrderByPublicationDateDesc(Long courseId);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/course-service/src/main/java/com/swerve/backend/subject/repository/CourseMaterialRepository.java b/course-service/src/main/java/com/swerve/backend/subject/repository/CourseMaterialRepository.java
--- a/course-service/src/main/java/com/swerve/backend/subject/repository/CourseMaterialRepository.java	(revision 86b1a1fb62b0b7f25b29e46f67ab7938d9727142)
+++ b/course-service/src/main/java/com/swerve/backend/subject/repository/CourseMaterialRepository.java	(date 1682854475805)
@@ -5,27 +5,47 @@
 import com.swerve.backend.subject.model.CourseMaterial;
 import org.springframework.data.domain.Page;
 import org.springframework.data.domain.Pageable;
+import org.springframework.data.jpa.repository.Modifying;
 import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.query.Param;
 import org.springframework.stereotype.Repository;
 
+import java.time.LocalDateTime;
 import java.util.List;
+import java.util.Optional;
 
 @Repository
 public interface CourseMaterialRepository extends BaseRepository<CourseMaterial,Long> {
 
-    @Override
+    Optional<CourseMaterial> findByName(String fileName);
+
+
+    List<CourseMaterial> findByTeacherIdAndOfferedCourseId(Long teacherId, Long offeredCourseId);
+
+    @Modifying
     @Query(
-            "select x from #{#entityName} x where x.deleted = false "
-                    + "and (cast(x.id as string) like :search "
-                    + "or x.name like :search or x.description like :search or cast(x.publicationDate as string) like :search)")
-    Page<CourseMaterial> findContaining(Pageable pageable, String search);
+            value =
+                    "insert into course_material (name, description, resource_url, publication_date, teacher_id, offered_course_id) " +
+                            "values (:name, :description, :resourceUrl, :publicationDate, :teacher, :offeredCourse)",
+            nativeQuery = true)
+    void insertCourseMaterial(@Param("name") String name, @Param("description") String description,
+                      @Param("resourceUrl") String resourceUrl, @Param("publicationDate") LocalDateTime publicationDate,
+                      @Param("teacher") Long teacher,
+                        @Param("offeredCourse") Long offeredCourse);
 
-    @Query(
-            "select x from #{#entityName} x where x.deleted = false and x.offeredCourse.id = :courseId "
-                    + "and (cast(x.id as string) like :search "
-                    + "or x.name like :search or x.description like :search or cast(x.publicationDate as string) like :search)")
-    Page<CourseMaterial> findByCourseIdContaining(
-            Long courseId, Pageable pageable, String search);
-
-    List<CourseMaterial> findByOfferedCourseAndDeletedFalseOrderByPublicationDateDesc(Long courseId);
+//    @Override
+//    @Query(
+//            "select x from #{#entityName} x where x.deleted = false "
+//                    + "and (cast(x.id as string) like :search "
+//                    + "or x.name like :search or x.description like :search or cast(x.publicationDate as string) like :search)")
+//    Page<CourseMaterial> findContaining(Pageable pageable, String search);
+//
+//    @Query(
+//            "select x from #{#entityName} x where x.deleted = false and x.offeredCourse.id = :courseId "
+//                    + "and (cast(x.id as string) like :search "
+//                    + "or x.name like :search or x.description like :search or cast(x.publicationDate as string) like :search)")
+//    Page<CourseMaterial> findByCourseIdContaining(
+//            Long courseId, Pageable pageable, String search);
+//
+//    List<CourseMaterial> findByOfferedCourseAndDeletedFalseOrderByPublicationDateDesc(Long courseId);
 }
Index: course-service/src/main/java/com/swerve/backend/subject/mapper/CourseMaterialMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.swerve.backend.subject.mapper;\r\n\r\nimport com.swerve.backend.shared.mapper.BaseMapper;\r\nimport com.swerve.backend.subject.dto.CourseMaterialDTO;\r\nimport com.swerve.backend.subject.dto.InstructorDTO;\r\nimport com.swerve.backend.subject.model.CourseMaterial;\r\nimport org.mapstruct.Mapper;\r\nimport org.mapstruct.Mapping;\r\n\r\n@Mapper(componentModel = \"spring\")\r\npublic interface CourseMaterialMapper extends BaseMapper<CourseMaterial, CourseMaterialDTO,Long> {\r\n\r\n    @Mapping(source = \"teacherId\", target = \"teacher\")\r\n    CourseMaterialDTO toDTO(CourseMaterial courseMaterial);\r\n\r\n    @Mapping(source = \"teacher.id\", target = \"teacherId\")\r\n    CourseMaterial toModel(CourseMaterialDTO courseMaterialDTO);\r\n\r\n    InstructorDTO instructorDTOFromId(Long id);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/course-service/src/main/java/com/swerve/backend/subject/mapper/CourseMaterialMapper.java b/course-service/src/main/java/com/swerve/backend/subject/mapper/CourseMaterialMapper.java
--- a/course-service/src/main/java/com/swerve/backend/subject/mapper/CourseMaterialMapper.java	(revision 86b1a1fb62b0b7f25b29e46f67ab7938d9727142)
+++ b/course-service/src/main/java/com/swerve/backend/subject/mapper/CourseMaterialMapper.java	(date 1682744433059)
@@ -4,8 +4,10 @@
 import com.swerve.backend.subject.dto.CourseMaterialDTO;
 import com.swerve.backend.subject.dto.InstructorDTO;
 import com.swerve.backend.subject.model.CourseMaterial;
+import com.swerve.backend.subject.model.OfferedCourse;
 import org.mapstruct.Mapper;
 import org.mapstruct.Mapping;
+import org.mapstruct.Named;
 
 @Mapper(componentModel = "spring")
 public interface CourseMaterialMapper extends BaseMapper<CourseMaterial, CourseMaterialDTO,Long> {
Index: auth-service/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server.port=8081\r\nspring.application.name=auth-service\r\n\r\neureka.instance.hostname=localhost\r\neureka.client.service-url.defaultZone=http://localhost:8761/eureka\r\n\r\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect\r\nspring.jpa.generate-ddl=true\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.datasource.url=jdbc:postgresql://localhost:5432/lms-auth?createDatabaseIfNotExist=true\r\nspring.datasource.username=postgres\r\nspring.datasource.password=password\r\n#spring.devtools.restart.enabled=true\r\n#spring.devtools.restart.additional-paths: src/main/java\r\n#spring.devtools.restart.exclude: WEB-INF/**\r\n\r\nspring.jackson.default-property-inclusion=non_empty\r\nspring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER\r\nspringdoc.api-docs.path=/docs\r\n\r\ntoken.secret=GieJX^>%Pd;Z]#&?kmZY4SRZNlWsjr%JJiH!q9KM~,Zd./[oh*=dus&p_M3Ab#B\r\ntoken.accessExpiration=7200\r\ntoken.refreshExpiration=86400\r\n\r\n\r\nspring.jpa.hibernate.show-sql=true\r\n\r\nmanagement.endpoints.web.exposure.include=*
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/auth-service/src/main/resources/application.properties b/auth-service/src/main/resources/application.properties
--- a/auth-service/src/main/resources/application.properties	(revision 86b1a1fb62b0b7f25b29e46f67ab7938d9727142)
+++ b/auth-service/src/main/resources/application.properties	(date 1682659425932)
@@ -9,7 +9,7 @@
 spring.jpa.hibernate.ddl-auto=update
 spring.datasource.url=jdbc:postgresql://localhost:5432/lms-auth?createDatabaseIfNotExist=true
 spring.datasource.username=postgres
-spring.datasource.password=password
+spring.datasource.password=admin
 #spring.devtools.restart.enabled=true
 #spring.devtools.restart.additional-paths: src/main/java
 #spring.devtools.restart.exclude: WEB-INF/**
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"corretto-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 86b1a1fb62b0b7f25b29e46f67ab7938d9727142)
+++ b/.idea/misc.xml	(date 1682659389449)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="corretto-17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: course-service/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=subject-service\r\n\r\n#spring.config.import=optional:configserver:http://localhost:8888\r\n\r\neureka.instance.hostname=localhost\r\neureka.client.service-url.defaultZone=http://localhost:8761/eureka\r\n\r\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect\r\nspring.jpa.generate-ddl=true\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.datasource.url=jdbc:postgresql://localhost:5432/lms-course?createDatabaseIfNotExist=true\r\nspring.datasource.username=postgres\r\nspring.datasource.password=password\r\nspring.datasource.platform=postgresql\r\nspring.batch.jdbc.initialize-schema=ALWAYS\r\n# we want to launch our job via our controller\r\nspring.batch.job.enabled=false\r\nspring.jackson.default-property-inclusion=non_empty\r\nspring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER\r\nspringdoc.api-docs.path=/docs\r\n\r\nserver.port=8082\r\ninput=src/main/resources/MOCK_DATA.csv\r\n#eureka.client.service-url.defaultZone=http://[myIP@]:8888/eureka\r\n\r\n\r\n\r\n#token.secret=GieJX^>%Pd;Z]#&?kmZY4SRZNlWsjr%JJiH!q9KM~,Zd./[oh*=dus&p_M3Ab#B\r\nmanagement.endpoints.web.exposure.include=*
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/course-service/src/main/resources/application.properties b/course-service/src/main/resources/application.properties
--- a/course-service/src/main/resources/application.properties	(revision 86b1a1fb62b0b7f25b29e46f67ab7938d9727142)
+++ b/course-service/src/main/resources/application.properties	(date 1682659568194)
@@ -10,7 +10,7 @@
 spring.jpa.hibernate.ddl-auto=update
 spring.datasource.url=jdbc:postgresql://localhost:5432/lms-course?createDatabaseIfNotExist=true
 spring.datasource.username=postgres
-spring.datasource.password=password
+spring.datasource.password=admin
 spring.datasource.platform=postgresql
 spring.batch.jdbc.initialize-schema=ALWAYS
 # we want to launch our job via our controller
Index: shared-library/src/main/java/com/swerve/backend/shared/security/SecurityUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.swerve.backend.shared.security;\r\n\r\nimport io.jsonwebtoken.Claims;\r\nimport org.springframework.security.core.context.SecurityContextHolder;\r\nimport org.springframework.security.core.userdetails.UserDetails;\r\n\r\npublic class SecurityUtils {\r\n    public static Long ROLE_ROOT_ID = 1L;\r\n    public static String ROLE_ROOT = \"ROLE_ROOT\";\r\n\r\n    public static Long ROLE_ADMIN_ID = 2L;\r\n    public static String ROLE_ADMIN = \"ROLE_ADMIN\";\r\n\r\n    public static Long ROLE_TEACHER_ID = 3L;\r\n    public static String ROLE_TEACHER = \"ROLE_TEACHER\";\r\n\r\n    public static Long ROLE_STUDENT_ID = 4L;\r\n    public static String ROLE_STUDENT = \"ROLE_STUDENT\";\r\n\r\n    public static Long ROOT_USER_ID = 1337L;\r\n\r\n    public static String USER_ID_CLAIM = \"userId\";\r\n    public static String ADMIN_ID_CLAIM = \"adminId\";\r\n    public static String TEACHER_ID_CLAIM = \"teacherId\";\r\n    public static String STUDENT_ID_CLAIM = \"studentId\";\r\n\r\n    public static String BEARER_PREFIX = \"Bearer \";\r\n\r\n    public static String getUsername() {\r\n        System.out.println(SecurityContextHolder.getContext().getAuthentication());\r\n        Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();\r\n        return principal instanceof UserDetails ? ((UserDetails) principal).getUsername() : \"\";\r\n    }\r\n\r\n    public static Claims getClaims() {\r\n        return (Claims) SecurityContextHolder.getContext().getAuthentication().getCredentials();\r\n    }\r\n\r\n    public static Long getUserId() {\r\n        return getClaims().get(USER_ID_CLAIM, Long.class);\r\n    }\r\n\r\n    public static Long getAdminId() {\r\n        return getClaims().get(ADMIN_ID_CLAIM, Long.class);\r\n    }\r\n\r\n    public static Long getTeacherId() {\r\n        return getClaims().get(TEACHER_ID_CLAIM, Long.class);\r\n    }\r\n\r\n    public static Long getStudentId() {\r\n        return getClaims().get(STUDENT_ID_CLAIM, Long.class);\r\n    }\r\n\r\n    public static boolean hasAuthority(String authority) {\r\n        return SecurityContextHolder.getContext().getAuthentication().getAuthorities().stream()\r\n                .anyMatch(r -> r.getAuthority().equals(authority));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shared-library/src/main/java/com/swerve/backend/shared/security/SecurityUtils.java b/shared-library/src/main/java/com/swerve/backend/shared/security/SecurityUtils.java
--- a/shared-library/src/main/java/com/swerve/backend/shared/security/SecurityUtils.java	(revision 86b1a1fb62b0b7f25b29e46f67ab7938d9727142)
+++ b/shared-library/src/main/java/com/swerve/backend/shared/security/SecurityUtils.java	(date 1682703531281)
@@ -23,6 +23,7 @@
     public static String ADMIN_ID_CLAIM = "adminId";
     public static String TEACHER_ID_CLAIM = "teacherId";
     public static String STUDENT_ID_CLAIM = "studentId";
+    public static String FOLDER_PATH="D:/Swerve-Files";
 
     public static String BEARER_PREFIX = "Bearer ";
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e3b09a9e-0488-4344-9c3a-1a8badac1ec4\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/uiDesigner.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/EnrollmentBatchConfig.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/SPGOC_Import.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/SPGOC_Processor.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/dto/SPGOC_DTO.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/course-service/src/main/resources/MOCK_DATA_Enroll.csv\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/BatchConfig.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/JobCompletionNotificationListener.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/StudentImport.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/StudentProcessor.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/controller/BatchController.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/dto/StudentImportDTO.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/user-service/src/main/resources/MOCK_DATA_Std.csv\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/BatchConfig.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/BatchConfig.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/JobCompletionNotificationListener.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/JobCompletionNotificationListener.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/SecurityConfig.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/SecurityConfig.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/controller/BatchController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/controller/BatchController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/user-service/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/user-service/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/SecurityConfig.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/SecurityConfig.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/dto/StudentDTO.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/dto/StudentDTO.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OSGKKz27OQhLND9UnwBd10H3kp\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;updated&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Application.SubjectServiceApplication\">\r\n    <configuration name=\"ApiGatewayApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.swerve.backend.apigateway.ApiGatewayApplication\" />\r\n      <module name=\"api-gateway\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.swerve.backend.apigateway.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"AuthServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.swerve.backend.auth.AuthServiceApplication\" />\r\n      <module name=\"auth-service\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.swerve.backend.auth.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"DiscoveryServerApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.swerve.backend.discoveryserver.DiscoveryServerApplication\" />\r\n      <module name=\"discovery-server\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.swerve.backend.discoveryserver.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SubjectServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.swerve.backend.subject.SubjectServiceApplication\" />\r\n      <module name=\"course-service\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.swerve.backend.subject.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.swerve.backend.userservice.UserServiceApplication\" />\r\n      <module name=\"user-service\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.swerve.backend.userservice.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.SubjectServiceApplication\" />\r\n        <item itemvalue=\"Application.UserServiceApplication\" />\r\n        <item itemvalue=\"Application.AuthServiceApplication\" />\r\n        <item itemvalue=\"Application.ApiGatewayApplication\" />\r\n        <item itemvalue=\"Application.DiscoveryServerApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e3b09a9e-0488-4344-9c3a-1a8badac1ec4\" name=\"Changes\" comment=\"\" />\r\n      <created>1681546504188</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681546504188</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 86b1a1fb62b0b7f25b29e46f67ab7938d9727142)
+++ b/.idea/workspace.xml	(date 1682855362952)
@@ -5,27 +5,14 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e3b09a9e-0488-4344-9c3a-1a8badac1ec4" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/EnrollmentBatchConfig.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/SPGOC_Import.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/SPGOC_Processor.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/dto/SPGOC_DTO.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/course-service/src/main/resources/MOCK_DATA_Enroll.csv" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/BatchConfig.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/JobCompletionNotificationListener.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/StudentImport.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/StudentProcessor.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/controller/BatchController.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/dto/StudentImportDTO.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/user-service/src/main/resources/MOCK_DATA_Std.csv" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/BatchConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/BatchConfig.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/JobCompletionNotificationListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/JobCompletionNotificationListener.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/SecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/config/SecurityConfig.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/controller/BatchController.java" beforeDir="false" afterPath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/controller/BatchController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/user-service/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/pom.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/SecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/config/SecurityConfig.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/dto/StudentDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/main/java/com/swerve/backend/userservice/dto/StudentDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/auth-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/auth-service/src/main/resources/application.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/dto/CourseMaterialDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/dto/CourseMaterialDTO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/mapper/CourseMaterialMapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/mapper/CourseMaterialMapper.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/repository/CourseMaterialRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/repository/CourseMaterialRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/course-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/course-service/src/main/resources/application.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/shared-library/src/main/java/com/swerve/backend/shared/security/SecurityUtils.java" beforeDir="false" afterPath="$PROJECT_DIR$/shared-library/src/main/java/com/swerve/backend/shared/security/SecurityUtils.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -41,6 +28,19 @@
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
+  "lastFilter": {
+    "state": "OPEN"
+  }
+}]]></component>
+  <component name="GithubPullRequestsUISettings">
+    <option name="selectedUrlAndAccountId">
+      <UrlAndAccount>
+        <option name="accountId" value="034ad02f-0f08-4c38-84d2-3257cd3980f1" />
+        <option name="url" value="https://github.com/ALI-19k1279/Swerve-Backend" />
+      </UrlAndAccount>
+    </option>
   </component>
   <component name="MavenImportPreferences">
     <option name="generalSettings">
@@ -54,15 +54,17 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;updated&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "updated",
+    "project.structure.last.edited": "Project",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "vcs.Git"
   }
-}</component>
+}]]></component>
   <component name="RunManager" selected="Application.SubjectServiceApplication">
     <configuration name="ApiGatewayApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.swerve.backend.apigateway.ApiGatewayApplication" />
@@ -132,8 +134,8 @@
     <recent_temporary>
       <list>
         <item itemvalue="Application.SubjectServiceApplication" />
+        <item itemvalue="Application.AuthServiceApplication" />
         <item itemvalue="Application.UserServiceApplication" />
-        <item itemvalue="Application.AuthServiceApplication" />
         <item itemvalue="Application.ApiGatewayApplication" />
         <item itemvalue="Application.DiscoveryServerApplication" />
       </list>
@@ -150,4 +152,15 @@
     </task>
     <servers />
   </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/course-service/src/main/java/com/swerve/backend/subject/service/CourseMaterialService.java</url>
+          <line>70</line>
+          <option name="timeStamp" value="2" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
 </project>
\ No newline at end of file
